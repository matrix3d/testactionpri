# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  issue_comment:
    types: [created, edited]
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: trace
        run: |
          mkdir main
          dir
          cd main
          echo ${{ github.token }}
          echo ${{ github.sha }}
          echo ${{ github.job }}
          echo ${{ github.run_number }}
          echo ${{ github.run_id }}
          (gi .).FullName
      - name: trace2
        run: |
          dir
          (gi .).FullName
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages 
      # Runs java
      - name: java
        run: |
         python main.py
         echo %asclassname%
         dir
         javac HelloWorld.java
         java HelloWorld
      - name: adt
        run: |
          cd game
          dir
          .\pack.bat
      - name: build project
        run: |
         # zip --junk-paths my-artifact HelloWorld.class HelloWorld.java
         tar -a -c -f my-artifact.zip HelloWorld.class HelloWorld.java
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: tagv${{ github.run_number }}
          release_name: Release${{ github.run_number }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      - name: upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
          
      - name: upload release asset
        id: upload-release-asset2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./game/rm.apk
          asset_name: rm.apk
          asset_content_type: application/zip  
      - name: pages
        id: pages
        run: |
          dir
          copy game/rm.apk gh-pages
          cd gh-pages
          dir
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "generated"
          git push
      - name: Download the file
        uses: suisei-cn/actions-download-file@v1
        id: downloadfile  # Remember to give an ID if you need the output
        with:
         url: "http://apacheroyaleci2.westus2.cloudapp.azure.com:8080/job/royale-asjs_jsonly/lastSuccessfulBuild/artifact/out/apache-royale-0.9.8-bin-js.zip"
         target: public/ 
      - name: tar 
        id: tar
        run: |
          attrib 'public/apache-royale-0.9.8-bin-js.zip'
          tar -x -f my-artifact.zip
          tar -x -f 'public/apache-royale-0.9.8-bin-js.zip'
          dir
          royale-asjs/js/bin/asjsc.bat Main.as -js-compiler-option+="--compilation_level ADVANCED_OPTIMIZATIONS"
       
          
          
